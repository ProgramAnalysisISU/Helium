#+TITLE: Bufbench Detail


** fbc-bug-5458-5495
No dynamic symptom, seems to compute wrong value.
** gmp-bug-14166-14167

** gzip-bug-3fe0caeada6aa3-39a362ae9d9b00
A malformed input file can cause gzip to crash with a segmentation
violation or hang in an endless loop.

** php-bug-308525-308529
#+BEGIN_EXAMPLE
Expected result:
----------------
ERROR: 5
ERROR: 5
ERROR: 5
ERROR: 5

Actual result:
--------------
ERROR: 5
ERROR: 5
ERROR: 0
ERROR: 0
#+END_EXAMPLE

** php-bug-309111-309159
#+BEGIN_EXAMPLE
Expected result:
----------------
Array
(
    [scheme] => http
    [host] => example.com
    [path] => /path/script.html
    [fragment] => fragment?data
)

Actual result:
--------------
Array
(
    [scheme] => http
    [host] => example.com
    [fragment] => fragment?data
)
#+END_EXAMPLE
** php-bug-309892-309910
#+BEGIN_EXAMPLE
Expected result:
----------------
four comparisons of "/" and "/asd":
  substr_compare("/", "/asd", 0, 4) => -3
  substr_compare("/asd", "/", 0, 4) => 3
  strncmp("/", "/asd", 4) => -3
  strncmp("/asd", "/", 4) => 3



Actual result:
--------------
four comparisons of "/" and "/asd":
  substr_compare("/", "/asd", 0, 4) => 0 (SHOULD BE -3)
  substr_compare("/asd", "/", 0, 4) => 3
  strncmp("/", "/asd", 4) => -3
  strncmp("/asd", "/", 4) => 3
#+END_EXAMPLE

** php-bug-309986-310009
PHP 5.2.17 crashes accessing object that is returned as $this from =__get()= handle (see code snapshot).
If object is not global this code works fine.
PHP 5.2.10 did not crash in such situation.
** php-bug-310011-310050
Bug 1: #54358
#+BEGIN_EXAMPLE
Expected result:
----------------
string(13) "4d89c1bc241ff"
string(3) "md5"
string(3) "md5"

Actual result:
--------------
string(13) "4d89c1bc241ff"
string(3) "md5"
string(3) ï¿½a"
#+END_EXAMPLE

Bug 2: #54039
#+BEGIN_EXAMPLE
Expected result:
----------------
Increment static variable, then use it in anonymous function definition:
Outer function increments $v to 1
Inner function reckons $v is 1
Outer function increments $v to 2
Inner function reckons $v is 2

Use static variable in anonymous function definition, then increment it:
Outer function increments $v to 1
Inner function reckons $v is 0
Outer function increments $v to 2
Inner function reckons $v is 1

Actual result:
--------------
Increment static variable, then use it in anonymous function definition:
Outer function increments $v to 1
Inner function reckons $v is 1
Outer function increments $v to 2
Inner function reckons $v is 2

Use static variable in anonymous function definition, then increment it:
Outer function increments $v to 1
Inner function reckons $v is 0
Outer function increments $v to 1
Inner function reckons $v is 0
#+END_EXAMPLE
** php-bug-310370-310389
#+BEGIN_EXAMPLE
Expected result:
----------------
<p>foo</p>

Actual result:
--------------
PHP Notice:  Undefined variable: offset in {file.php} on line 11
#+END_EXAMPLE
** php-bug-311346-311348
#+BEGIN_EXAMPLE
Expected result:
----------------
<a href="file-first.php?var=value">link</a><a href="file-second.php">link</a>

Actual result:
--------------
<a href="file-first.php?var=value">link</a>
#+END_EXAMPLE
** python-bug-69223-69224
#+BEGIN_SRC diff
+ if (timeout < 0) {
+            PyErr_SetString(PyExc_ValueError,
+                        "timeout must be non-negative");
+            return NULL;
+        }
seconds = (long)timeout;
timeout = timeout - (double)seconds;
tv.tv_sec = seconds;
#+END_SRC
** individual bug study
*** putty 0.56 -> 0.57
heap corruption vulnerability
http://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-sftp-string.html

the vulnerability kicks in after host key verification, so the host
key of the server has to have been accepted to get this far.

I don't really want to study putty bugs, because it is mainly useful
on windows system where there seems to be no default ssh tool.
Windows specific code is one of the major problem that cause the
compile failure thus lower the buildrate.
*** tightvnc 1.2.0, 1.2.2, bug, fix, 1.3.9
The latest update for tightvnc is 2014.
*** libpng
